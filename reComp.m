function [newData] = reComp(compFile, dataFile)% When Flowjo exports .fcs files, the parameters are in a different order than in % the original file. This is annoying when trying to compare files after the files% have been read in using fca_readfcs(). This function takes two .fcs filenames and % uses one to reorder the parameters and apply compensation to the other.%% The filename compFile refers to the original .fcs file from BD FacsDiva, and the % filename dataFile refers to an .fcs file that has been exported from Flowjo. It % is assumed that dataFile will be a subset of compFile and thus will have the same% number and type of parameters.% get log-scaled data and headers[~, compHdr] = fca_readfcs(compFile);[~, dataHdr, data] = fca_readfcs(dataFile);%%TODO: catch case if compFile and dataFile have diff # of comps% get a struct of the comp namescompNames = {compHdr.par.name};dataNames = {dataHdr.par.name};% set up a new data matrixnewData = zeros(size(data, 1), size(data, 2));%%%% search for params and reorder themparCols = zeros(1, compHdr.NumOfPar);for i = 1:compHdr.NumOfPar  % finds the column j in dataNames for which compNames{i} == dataNames{j}  % stores it in parCols(i), so compNames{i} = dataNames{parCols(i)}  parCols(i) = find(strcmp(compNames{i}, dataNames));end%%TODO: catch case if compFile and dataFile have diff comp names% assign data from the data matrix to the new matrix% in the determined order of params from compFilenewData = data(:, parCols);%%%% apply the comp matrixcompCols = zeros(1, size(compHdr.CompMat,1));for i = 1:size(compHdr.CompMat,1)  % assign the ordering of the comp labels as they are in the comp matrix  compCols(i) = find(strcmp(compHdr.CompLabels{i},compNames));end% the compensated values are equal to the data matrix * the inverse of the comp matrixnewData(:, compCols) = newData(:, compCols) * pinv(compHdr.CompMat);    